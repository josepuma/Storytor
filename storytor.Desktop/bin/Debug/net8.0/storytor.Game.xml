<?xml version="1.0"?>
<doc>
    <assembly>
        <name>storytor.Game</name>
    </assembly>
    <members>
        <member name="T:storytor.Game.Screens.StoryboardRenderer">
            <summary>
            Renders a storyboard with proper timing and sprite management
            </summary>
        </member>
        <member name="M:storytor.Game.Screens.StoryboardRenderer.UpdateTime(System.Double)">
            <summary>
            Updates the renderer with the current audio time
            </summary>
            <param name="timeMs">Current time in milliseconds</param>
        </member>
        <member name="M:storytor.Game.Screens.StoryboardRenderer.getActiveCommand``1(System.Collections.Generic.IEnumerable{``0},System.Double)">
            <summary>
            Generic function to get the active command at a given time
            </summary>
        </member>
        <member name="M:storytor.Game.Screens.StoryboardRenderer.interpolateDoubleValue(System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Generic interpolation function for commands with double values
            </summary>
        </member>
        <member name="M:storytor.Game.Screens.StoryboardRenderer.interpolateVector2Value(System.Double,System.Int32,System.Int32,osuTK.Vector2,osuTK.Vector2,System.Int32)">
            <summary>
            Generic interpolation function for commands with Vector2 values
            </summary>
        </member>
        <member name="T:storytor.Game.Screens.AnimatedStoryboardSprite">
            <summary>
            A drawable sprite that can be animated based on storyboard commands
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.StoryboardData">
            <summary>
            Represents a complete storyboard with all its sprites and metadata
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardData.FilePath">
            <summary>
            The source file path of this storyboard
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardData.Sprites">
            <summary>
            List of all sprites in the storyboard
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardData.TotalCommands">
            <summary>
            Gets the total number of commands across all sprites
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardData.UsedLayers">
            <summary>
            Gets all unique layers used in this storyboard
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Models.StoryboardData.GetSpritesByLayer(System.String)">
            <summary>
            Gets sprites filtered by layer
            </summary>
            <param name="layer">The layer name to filter by</param>
            <returns>Sprites in the specified layer</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Models.StoryboardData.GetAllFadeCommands">
            <summary>
            Gets all fade commands across all sprites
            </summary>
            <returns>All fade commands in the storyboard</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.StoryboardCommand">
            <summary>
            Represents a command that can be applied to a storyboard sprite
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardCommand.CommandType">
            <summary>
            The type of command (e.g., "F" for Fade)
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardCommand.Easing">
            <summary>
            Easing type for the command (0 = None, 1 = Out, 2 = In, 3 = InOut)
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardCommand.StartTime">
            <summary>
            Start time of the command in milliseconds
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardCommand.EndTime">
            <summary>
            End time of the command in milliseconds
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.FadeCommand">
            <summary>
            Represents a fade command that controls sprite opacity
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.FadeCommand.StartOpacity">
            <summary>
            Starting opacity value (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.FadeCommand.EndOpacity">
            <summary>
            Ending opacity value (0.0 to 1.0)
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.MoveCommand">
            <summary>
            Represents a move command that controls sprite position
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.MoveCommand.StartX">
            <summary>
            Starting X position
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.MoveCommand.StartY">
            <summary>
            Starting Y position
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.MoveCommand.EndX">
            <summary>
            Ending X position
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.MoveCommand.EndY">
            <summary>
            Ending Y position
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.ScaleCommand">
            <summary>
            Represents a scale command that controls sprite size
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.ScaleCommand.StartScale">
            <summary>
            Starting scale factor
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.ScaleCommand.EndScale">
            <summary>
            Ending scale factor
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.VectorScaleCommand">
            <summary>
            Represents a vector scale command that controls sprite size independently on X and Y axes
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.VectorScaleCommand.StartScaleX">
            <summary>
            Starting X scale factor
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.VectorScaleCommand.StartScaleY">
            <summary>
            Starting Y scale factor
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.VectorScaleCommand.EndScaleX">
            <summary>
            Ending X scale factor
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.VectorScaleCommand.EndScaleY">
            <summary>
            Ending Y scale factor
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.RotateCommand">
            <summary>
            Represents a rotate command that controls sprite rotation
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.RotateCommand.StartAngle">
            <summary>
            Starting rotation angle in radians
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.RotateCommand.EndAngle">
            <summary>
            Ending rotation angle in radians
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Models.StoryboardSprite">
            <summary>
            Represents a sprite in the storyboard with its properties and commands
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.Id">
            <summary>
            Unique identifier for this sprite instance
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.Layer">
            <summary>
            The layer this sprite belongs to (Background, Fail, Pass, Foreground, Overlay)
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.Origin">
            <summary>
            The origin point of the sprite (TopLeft, Centre, etc.)
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.ImagePath">
            <summary>
            Path to the sprite image file
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.X">
            <summary>
            Initial X position of the sprite
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.Y">
            <summary>
            Initial Y position of the sprite
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.Commands">
            <summary>
            List of commands applied to this sprite
            </summary>
        </member>
        <member name="P:storytor.Game.Storyboard.Models.StoryboardSprite.DisplayName">
            <summary>
            Gets the display name of the sprite (filename without path)
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Parser.CommandParsers.FadeCommandParser">
            <summary>
            Parses fade commands from OSB file lines
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.FadeCommandParser.ParseFadeCommand(System.String)">
            <summary>
            Attempts to parse a fade command from a line of text
            </summary>
            <param name="line">The line to parse (should start with 'F')</param>
            <returns>A FadeCommand if parsing succeeds, null otherwise</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.FadeCommandParser.IsFadeCommand(System.String)">
            <summary>
            Checks if a line represents a fade command
            </summary>
            <param name="line">The line to check</param>
            <returns>True if the line starts with 'F' (case insensitive)</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.Parser.CommandParsers.MoveCommandParser">
            <summary>
            Parses move commands from OSB file lines
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.MoveCommandParser.ParseMoveCommand(System.String)">
            <summary>
            Attempts to parse a move command from a line of text
            </summary>
            <param name="line">The line to parse (should start with 'M')</param>
            <returns>A MoveCommand if parsing succeeds, null otherwise</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.MoveCommandParser.IsMoveCommand(System.String)">
            <summary>
            Checks if a line represents a move command
            </summary>
            <param name="line">The line to check</param>
            <returns>True if the line starts with 'M' (case insensitive)</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.Parser.CommandParsers.RotateCommandParser">
            <summary>
            Parses rotate commands from OSB file lines
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.RotateCommandParser.ParseRotateCommand(System.String)">
            <summary>
            Attempts to parse a rotate command from a line of text
            </summary>
            <param name="line">The line to parse (should start with 'R')</param>
            <returns>A RotateCommand if parsing succeeds, null otherwise</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.RotateCommandParser.IsRotateCommand(System.String)">
            <summary>
            Checks if a line represents a rotate command
            </summary>
            <param name="line">The line to check</param>
            <returns>True if the line starts with 'R' (case insensitive)</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.Parser.CommandParsers.ScaleCommandParser">
            <summary>
            Parses scale commands from OSB file lines
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.ScaleCommandParser.ParseScaleCommand(System.String)">
            <summary>
            Attempts to parse a scale command from a line of text
            </summary>
            <param name="line">The line to parse (should start with 'S')</param>
            <returns>A ScaleCommand if parsing succeeds, null otherwise</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.ScaleCommandParser.IsScaleCommand(System.String)">
            <summary>
            Checks if a line represents a scale command
            </summary>
            <param name="line">The line to check</param>
            <returns>True if the line starts with 'S' (case insensitive)</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.Parser.CommandParsers.VectorScaleCommandParser">
            <summary>
            Parses vector scale commands from OSB file lines
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.VectorScaleCommandParser.ParseVectorScaleCommand(System.String)">
            <summary>
            Attempts to parse a vector scale command from a line of text
            </summary>
            <param name="line">The line to parse (should start with 'V')</param>
            <returns>A VectorScaleCommand if parsing succeeds, null otherwise</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.CommandParsers.VectorScaleCommandParser.IsVectorScaleCommand(System.String)">
            <summary>
            Checks if a line represents a vector scale command
            </summary>
            <param name="line">The line to check</param>
            <returns>True if the line starts with 'V' (case insensitive)</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.Parser.OsbParser">
            <summary>
            Main parser for OSB storyboard files
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.ParseAsync(System.String)">
            <summary>
            Parses an OSB file and returns a complete Storyboard object
            </summary>
            <param name="filePath">Path to the .osb file</param>
            <returns>A parsed Storyboard object</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.ParseFile(System.String)">
            <summary>
            Parses an OSB file synchronously and returns a complete Storyboard object
            </summary>
            <param name="filePath">Path to the .osb file</param>
            <returns>A parsed Storyboard object</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.Parse(System.String[],System.String)">
            <summary>
            Parses OSB content from an array of lines
            </summary>
            <param name="lines">Lines from the OSB file</param>
            <param name="filePath">Original file path for reference</param>
            <returns>A parsed Storyboard object</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.IsSpriteDefinition(System.String)">
            <summary>
            Checks if a line represents a sprite definition
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.ParseSprite(System.String)">
            <summary>
            Parses a sprite definition line
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.ParseOrigin(System.String)">
            <summary>
            Parses the origin string to an Anchor enum
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Parser.OsbParser.ParseCommand(System.String)">
            <summary>
            Attempts to parse a command from a line
            </summary>
        </member>
        <member name="T:storytor.Game.Storyboard.Reader.OsbFileReader">
            <summary>
            Handles reading .osb files from disk with proper error handling
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.Reader.OsbFileReader.ReadOsbFileAsync(System.String)">
            <summary>
            Reads the content of an .osb file asynchronously
            </summary>
            <param name="filePath">Path to the .osb file</param>
            <returns>The file content as a string array (one line per element)</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when the file doesn't exist</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the file is not a valid .osb file</exception>
        </member>
        <member name="M:storytor.Game.Storyboard.Reader.OsbFileReader.ReadOsbFile(System.String)">
            <summary>
            Reads the content of an .osb file synchronously
            </summary>
            <param name="filePath">Path to the .osb file</param>
            <returns>The file content as a string array (one line per element)</returns>
        </member>
        <member name="T:storytor.Game.Storyboard.StoryboardLoader">
            <summary>
            High-level loader for storyboard files with logging and error handling
            </summary>
        </member>
        <member name="M:storytor.Game.Storyboard.StoryboardLoader.LoadStoryboardAsync(System.String)">
            <summary>
            Loads a storyboard from an OSB file with comprehensive error handling
            </summary>
            <param name="filePath">Path to the .osb file</param>
            <returns>A loaded Storyboard object or null if loading fails</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.StoryboardLoader.LoadStoryboard(System.String)">
            <summary>
            Loads a storyboard synchronously
            </summary>
            <param name="filePath">Path to the .osb file</param>
            <returns>A loaded Storyboard object or null if loading fails</returns>
        </member>
        <member name="M:storytor.Game.Storyboard.StoryboardLoader.PrintStoryboardDetails(storytor.Game.Storyboard.Models.StoryboardData)">
            <summary>
            Prints detailed information about a loaded storyboard
            </summary>
            <param name="storyboard">The storyboard to analyze</param>
        </member>
        <member name="T:storytor.Game.Utils.AudioTestGenerator">
            <summary>
            Utility to generate simple test audio files for debugging
            </summary>
        </member>
        <member name="M:storytor.Game.Utils.AudioTestGenerator.CreateTestWavFile(System.String,System.Double,System.Double)">
            <summary>
            Creates a simple WAV file with a sine wave tone for testing
            </summary>
            <param name="filePath">Where to save the test audio file</param>
            <param name="durationSeconds">Duration in seconds</param>
            <param name="frequency">Frequency of the tone in Hz</param>
        </member>
        <member name="M:storytor.Game.Utils.AudioTestGenerator.CreateTestAudioInFolder(System.String)">
            <summary>
            Creates a test audio file in the specified folder
            </summary>
            <param name="folderPath">Target folder</param>
            <returns>Path to the created test file</returns>
        </member>
    </members>
</doc>
